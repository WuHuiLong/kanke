<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kanke.dao.ScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.kanke.pojo.Schedule" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="movie_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="hall_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="start_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, movie_id, hall_id, start_time, end_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kanke.pojo.Schedule" >
    insert into schedule (id, movie_id, hall_id, 
      start_time, end_time, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, #{hallId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.kanke.pojo.Schedule" >
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="hallId != null" >
        hall_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="movieId != null" >
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="hallId != null" >
        #{hallId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kanke.pojo.Schedule" >
    update schedule
    <set >
      <if test="movieId != null" >
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="hallId != null" >
        hall_id = #{hallId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kanke.pojo.Schedule" >
    update schedule
    set movie_id = #{movieId,jdbcType=INTEGER},
      hall_id = #{hallId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectScheduleByMovieIdHallId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM schedule
    WHERE movie_id=#{movidId}
    and hall_id=#{hallId}
  </select>
  <select id="checkConflict" resultType="int" parameterType="map">
    SELECT count(1)
    FROM schedule
    WHERE (start_time BETWEEN #{startTime} and #{endTime})
    or (end_time between #{startTime} and #{endTime})
    or (#{startTime} between start_time and end_time)
    or (#{endTime} between start_time and end_time)
  </select>


</mapper>