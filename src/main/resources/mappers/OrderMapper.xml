<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kanke.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.kanke.pojo.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="schedule_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="payment_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="close_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, user_id, schedule_id, quantity, payment, payment_type, status, payment_time, 
    end_time, close_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kanke.pojo.Order">
    insert into order (id, order_no, user_id, 
      schedule_id, quantity, payment, 
      payment_type, status, payment_time, 
      end_time, close_time, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, 
      #{scheduleId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, 
      #{paymentType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.kanke.pojo.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kanke.pojo.Order">
    update order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kanke.pojo.Order">
    update order
    set order_no = #{orderNo,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      schedule_id = #{scheduleId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserIdAndOrderId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM order
    WHERE  user_id=#{userId}
    And order_no=#{orderNo}
  </select>

  <select id="selectByOrderNo" parameterType="long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM order
    WHERE order_no=#{orderNo}
  </select>

  <select id="selectTotalPrice" parameterType="int" resultType="int">
    SELECT NULLIF(sum(quantity),0)
    FROM order
    WHERE user_id=#{userId}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="list">
    SELECT
    <include refid="Base_Column_List"/>
    FROM order
    WHERE user_id=#{userId}
    order by creat_time desc
  </select>

  <select id="selectList" parameterType="list" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM order
    ORDER BY create_time desc
  </select>
</mapper>